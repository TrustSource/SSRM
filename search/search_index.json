{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Shared Security Responsibility Model - Guidance for TrustSource Users","text":"<p>The Shared Security Responsibility Model (SSRM) is a model to describe the distribution of responsibility. YOU, as the user of TrustSource, want to have your data processed in a secure way. We, as the provider, aim to achieve this. But we both have to work together, to succed. This SSRM Guidance has been provided, to clarify each partie's responsibilities, as well as to support YOU in understanding and coping with YOUR responsibilities.</p> <p>Feel free to reach out anytime, to clarify questions through mail under <code>support @ trustsource.io</code> or contact your account representative.</p>"},{"location":"#the-shard-security-responsibility","title":"The Shard Security Responsibility","text":"<p>TrustSource helps in providing Security and Compliance for software applications. In scope of this, TrustSource itself has the aim to be secure und compliant itself. TrustSource has a strong set of security policies to achieve this. This will support what we call Security of the Application. However, to provide a secure solution, it is not only done with a secure application. Also the use of the application comes with a certaiin responsibility, which we call Security in the Application. This document outlines these two aspects and gives guidance on how to achieve this goal. As a simple guideline you may assuem that we and our partners will ensure the Security of the application while it remains YOUR responsibility to ensure Security in the application.</p>"},{"location":"#scope","title":"Scope","text":"<p>This document addresses the use of TrustSource in general. It will not distinguish between different versions or editions. It is written with the Software as a Service hosted by EACG Operation Services in mind. If you operate TrustSource or parts of it in another constellation the guidance may not apply. Check with your account representative, if you are not sure, whether it applies to your case.</p>"},{"location":"#table-of-contents","title":"Table of Contents","text":"<p>This document is structured into six sections with differnt focus:</p> <ol> <li>This Introduction, which guides you through the idea and reading hints</li> <li>EACG Operations Services GmbH Responsibilities - here you will find information about the controls and protection we  take care of. </li> <li>Access Security - this describes how access security is organized, and how you will be able to achieve a maximum of access control</li> <li>Data Integrity - here you get insights on our data management and will learn what you may do to ensure integrity from your side</li> <li>Artefact Integrity - this gives an overview of what is produced and what you may do to improve integrity of your data</li> <li>Handling Alerts - Trustsource does not only take data. It is also producing information to act upon. You should be aware of this data an ensure activity will be taken. This chapter will help you to understand what is possible and how to arrange notifications.</li> </ol>"},{"location":"#how-to-read-the-document","title":"How to read the document","text":"<p>If you are a new user and have endless time, we suggest to read everyting from beginning to start. But most likely you already denied the second condition and thus are seeking a way to reduce the effort to achieve your goal. In this case follow one of the role-specific paths outlined here:</p> <ul> <li>System Administrator / Operations </li> </ul> <p>You most likely will have to go through chapters 3, 4 and the intro to 5. Depending on your organisation, it be useful to also get an idea of the alert options described in Chapter 6. Please do not forget to look into the following subsection of this page. There are some geenral contact and communication links.</p> <ul> <li>Data Security or Data Protection Officer</li> </ul> <p>You may focus chapter 2 and the intro to chapter 4.</p> <ul> <li>Security Architect concerned about TrustSource Security</li> </ul> <p>Focus on chapter 2. There you will learn about our ITSM and protection mechanisms. In addition have a look at chapter 3, Access Security.</p> <ul> <li>Project or Product Manager</li> </ul> <p>Be sure to get an idea of 3 but focus on chapters 4 and 6.</p> <ul> <li>Compliance Manager</li> </ul> <p>You should also get an idea of 3. Main interest should be on chapters 4 and 5. </p> <ul> <li>Developer</li> </ul> <p>You may focus on the introductions of chapters 3, 4, 5 and 6. The details you may add upon demand.</p>"},{"location":"#further-sources-of-knowledge","title":"Further Sources of Knowledge","text":"<p>You should be aware of the different sources you may tap to learn about TrustSource:</p> <ul> <li>Tools: TrustSource is a large aggregation of services and tools. Many of our tools are provided as opensource and can be found on Github</li> <li>System Monitoring: at the bottom of each screen you will find a link to our public System Monitoring</li> <li>System Management Notifications: in the above linked page you will be able to subscribe to a newsletter, where will announce changes and system updates. </li> <li>Knowledge Base: at the top right of the application there is a link to our online Knowledge base</li> <li>FAQ: the Knowledgebase is available to everyone and contains information on compliance, establishing Compliance processes, setting up an OSPO, integrating different programming languages / CI/CD flows with TrustSource, how to handle use cases within TrustSource, etc.</li> <li>If you are a subscribed to TrustSource you also are eligible to may write an email to our support team at support@trustsource.io</li> <li>Direct contact: You will find our contact details, at our website under www.trustsource.io/contact</li> </ul>"},{"location":"#license","title":"License","text":"<p>This documentation is provided under CC-BY-SA-4.0. You may clone or fork this repository and create you own Shared Responsibility Model (SSRM) based on these documents. But please make sure to remove all references to TrustSource and EACG except an attribution notice. EACG as well as TrustSource and the corresponding logos are protected Trademarks and should not be used without a written approval by any third party.</p> <p>This documentation may change. We will notify changes through the systems management notification mailing list.</p>"},{"location":"accessSecurity/","title":"Access Security","text":"<p>The solution implements access seurity. It is not possible to access any data or any information from the system without an authenticated request. To ensure this TrustSource uses a proxy, which is requesting and verifying every request, before executing it. There are two possible Authentication providers: - TrustSource - External Identity Provider</p>"},{"location":"accessSecurity/#trustsource-as-identity-provider","title":"TrustSource as Identity Provider","text":"<p>To access TrustSource, a username / password combination has to be provided. To keep this confidential is a key repsonsibility of every user. </p> <p>We recommend using a 3rd party identity provider that supports multi factor authenticiation. </p>"},{"location":"accessSecurity/#adding-new-users","title":"Adding new users","text":"<p>While using TrustSource as the Identity Provider you have the option to invite users to join your account. These users are allowed to be from any organisation. It is in the responsibility of the account owner (role Account Admins) to invite only trustworthy users. </p> <p>New users will receive an invitation by email with a link they need to activate their access. in the next step, they require to set a password. A forgotten password can be reset anytime using the forgotten password link. Thus, if a user from an insecure domain is invited, a malicious suspect might take over the mail account and use the reset function to gain access.</p> <p>However, it is also in the repsonsibility of the account owner to remove access for users when it is not longer required.</p>"},{"location":"accessSecurity/#assigning-roles","title":"Assigning Roles","text":"<p>Every user requires one or more roles. Depending on the roles, the rights are set. A detailed overview can be found in the TrustSource Knowledgebase. It is in the responsibility of the account owner to manage the rights for each user. We recommend to favour a restrictive approach and review the need of roles on a regular basis.</p>"},{"location":"accessSecurity/#deleting-users","title":"Deleting users","text":"<p>TrustSource keeps audit logs of all events users initiate. These logs contain the user ID. For better readability the visualization uses the real user name for display. However, it is always possible to remove a user's name using the &gt;Right to be Forgotten (RTBF)&lt; button. This will delete the name information but keep the then nameless ID.</p> <p>Deleting the user will close the account. No more access will be possible for that user. The audit logs will keep showing the name.  </p>"},{"location":"accessSecurity/#3rd-party-identity-provider","title":"3rd Party Identity Provider","text":"<p>Depending on your subscription, you may want to add an external Identity Provider. This could be either your corporate Active Directory, Github or Apple. The benefit of these providers is for example the support for One Time Password (OTP) authentication, but also more comfort in managing users. Given a user leaves the company, your HR will take care to remove him from the corproate directory. If you use this as Identity Provider, the user will immediately loose access to TrustSource as well. If you decide for manual user management, you will have to provide a routine - either manual or automated - to ensure the removal in TrustSource will take place in time. </p> <p>In addition these providers may also provide an OID token containing claims concerning their roles in TrustSource. In Active Directory this typically is organized through memebership of Security Groups. Thus you would assign every user to a set of security groups, according to the roles they shall have in TrustSource (see role mapping).</p> <p>To setup a 3rd party provider, you will require a user with the role \"Account Admin\". The first user creating an account automatically will own this a role. The role allows to invite/add new users - see Account Admin Role in the online help - as well as arrange account settings. </p> <p>You may check your roles by hovering under your profile icon in the upper left corner. If the correct role is not set, you will need to contact an Account Admin to set the role. PLEASE NOTE: It is not possible to modify your own role! You will need to create a second Account Admin to change your role settings. </p> <p>It is in your repsonsibility to assign roles with caution. If users have access or manipulate content within the application, TrustSource may not help. Our employees do not have access to your account data. However, all access will be logged in the access log, which is visible to Account Admin roles.  </p> <p>It is in your responsibility to setup and maintain the 3rd party provider connection details. If you need assistance, look at our knowledge base for help or contact support. </p>"},{"location":"accessSecurity/#enforce-3rd-party-login","title":"Enforce 3rd party login","text":"<p>If you setup a 3rd party provider, the authentictaion by the application still remains active. This will allow users that are available only within TrustSource also to access the service. This might be a good solution in case you want external partners, which you do not want to manage / add to your internal AD to access the service. However, it bears also the risk, that these useres are not addressed with your user access management procedures, e.g. regular account review.</p> <p>However, you may encforce that only accounts existing in your AD will be allowed to access the service. This will automatically prevent all users from loging in using the local authentication. To do so, a known user with Account Admin role needs to create a ticket at TrustSource Support to initiated / deactivate IDM enforcement. PLEASE BE PREPARED: Our support will validate the origin of the request. </p>"},{"location":"accessSecurity/#configure-smtp","title":"Configure SMTP","text":"<p>TrustSource is configured to send all communications using <code>@trustsource.io</code> addresses. While using a 3rd party provider, you may prefer to use your own server for sending authentication and password reset emails. This can be done in the ACCOUNT ADMIN &gt; SMTP section. As long as the server is not set up, all mails will go through the TrustSource mail server. See our knowledge base for more details on how to setup the integration.</p> <p>It is in your responsibility to setup and maintain this configuration. </p>"},{"location":"artefactIntegrity/","title":"Integrity of Outbound Artifacts","text":"<p>One of the main reasons to use TrustSource is the need to produce Outbound Artifacts. These artifacts comprise:</p> <ol> <li>Software Bill of Materials (SBOM) - a list of ingredients a software consists of concerning a particular version</li> <li>Vulnerability Exploitability Exchange (VEX) - documents the current status of vulnerabilities concerning a particular product/version</li> <li>Notice files - legal documentation, to cope with the need of legal documentation </li> <li>SOUP lists - lists used to document Software of unknown Provenance </li> </ol> <p>Depeding on the document, the requirements </p>"},{"location":"artefactIntegrity/#software-bill-of-materials","title":"Software Bill of Materials","text":"<p>TrustSource allows to combine several elements in a Software bill of material (SBOM). It may contain:</p> <ul> <li>Software components and their transitive dependencies</li> <li>Infrastructure components </li> <li>3rd party services</li> <li>Common of the Shelf (COTS) components, e.g. closed source such as Oracle or SAP.</li> </ul> <p>Per each component data following the NTIA requirements for SBOMs can be colleted and added to the entry. In addition, further information as required by the Medical Device Directive, respectively ISO 62326 can be added to the components. </p> <p>TrustSource does not only provide the tooling to collect all that information and mechanisms to generate the reports or versionable documents. We also support the data collection for open source components by integrating with the different eco-systems and pulling the data where possible.</p> <p>However, not all these searches will in all cases be successful. Thus data may be missing or outdated. One of the most difficult cases to detect are abandonded or stale repositories where the newer versions are hosted in another repository, Such moves are difficult to detect. However, if you come across such a situation, please send a mail to our support, they will know how to handle and resolve the case. We see it as our responsibility to provide you with the best collection of data possible.</p> <p>In addition, we provide the means of infrastructure, services and COTS. None of these have meta data publicly available or a sort of public meta data repository such as maven or pypi. Therefor it remains in your responsibility to collect and manage this information. TrustSource will try to support you by giving hints where it sus\u00fcects components or feels information might be missing, but it has no source to resolve the task for you.</p> <p>Therefor it remains in your repsonisbility to verify that SBOMs are complete, meaning that they contain all components of the application. </p>"},{"location":"artefactIntegrity/#vulnerability-exploitability-exchange-documents","title":"Vulnerability Exploitability Exchange Documents","text":"<p>The idea of the Vulnerability Exploitability Exchange (VEX) documents is, to provide a docuemnt allowing for automation of the cumbersome manual analysis and followup of vulnerability management. VEX has been introduced as part of the OASIS Common Security Advisory Framework (CSAF) 2.0., mainly driven by NTIA and German BSI. These documents shall be machine readable and allow the automated consumption of handling advisories concerning vulnerabilities.</p> <p>The idea is, that a user will not have to verify all potential matchings anymore and chase around to get information from its software vendors on how or whether to patch a particular product version. Intstead the user shall download the latest VEX and see the status concerning the vulnerability. </p> <p>TrustSource aims to support software and hardware vendors in resolving this upcoming responsibility. Therefor it will be possible to create, distribute and maintain VEX dcouments based upon specific release information. Each release can be supplied with a specific API key, that allows to pull the release-specific VEX document in its current status. Thus a vendor will only need to provide the API-Key (e.g. via QR code) with his Software version and the user may pull the corresponding document to learn how to deal with the vulnerability. It is in TrustSource's repsonisbility to provide the mechanisms to support this behavior.</p> <p>However, there is still the descision on how to treat an identified vulnerability. This decision as well as the documentation on what to do remains in the responsibility of the user. TrustSource will notify the user (see Vulnerability Alert), if new Known Vulnerabilities will occur in the code scanned by and managed through TrustSource. But the analysis on whether the vulnerability is really criitcal or requires treatement remains with You. </p> <p>PLEASE NOTE: It is also possible that you recognise during penetration testing or some upgrades new vulnerabilities in your own code. Currently you may add these to your components and/or solutions manually. These can then also be managed in VEX documents. currently it is not possible to publish such vulnerabilities directly to NVD. We are evaluating this porocess, but it is in YOUR responsibility to arrange the according steps.</p>"},{"location":"artefactIntegrity/#notice-files","title":"Notice Files","text":"<p>The Notice File is the legal documentation of your delivered solution (hardware, software, 3rd party services, etc). It organises compliance through resolving obligations. This comprises attribution requirements, change notifications and the presentation of license texts, etc. </p> <p>TrustSource determines based on the business and legal circumstances defined on the project and module settings the legal obligations according to the corresponding license. To achieve this, TrustSource organises a legal solver , a license database and the documentation of the legal circumstances. The solver takes these input together with the status of the component (coupling and modification state) and determines the resulting obligations. These obligations are used to generate the skeleton of the corrsponding Notice file. </p> <p>It is TrustSource's responsibility, that the mechanism generating the skeleton is working properly. TrustSource has worked with CMS, a legal consulting firm, to resolve the license obligations. These are stored in the license database, which is used by the solver to determine the obligations. However, it is in TrustSource's responsibility to ensure licenses are provided. </p> <p>From time to time it may happen that new or unknown licenses appear. In this case TrustSource will issue a warning and show that \"License could not be macthed\". It is in YOUR responsibility to resolve such cases. The simplest way is to forward the component key to TrustSource Support and request analysis of the corresponding component. If the component is a public component, our agents will take care and let you know, when the resolution is completed. Typically this should be possible within 48hrs business time.</p> <p>You also may take action by yourself. TrustSource provides two means to assess license informatin and operates a shared component database to collect clearing information on open source components. The first source for meta data are the package management systems. In general these systems contain a basic set of declared license information. Unfortunately this information is not always complete and/or correct. Sometimes it may happen, that mantainers overlook a component or license which may infect the rest of the components. Thus a component declared as Apache may actually result in being GPL2.</p> <p>To cope with such issues, TrustSource also provides the capability to run a \"DeepScan\" on a repository. This scan asssess all text files in a repository and identifies all license texts. DeepScan is available in different flavours: - a limited version for public repositories is available as public SaaS soultion - a full blown SaaS implementation for private repositories is availabe embedded in TrustSurce - a full featured CLI version is available at Github for download, this also can be installed through pip \"ts-deepscan\"</p> <p>It is TrustSource's responsibility to provide the solutions and ensure, that they work. It is in YOUR responsibility, to make use of these tools to determine the correctness and completeness of the information provided within the Notice File.</p>"},{"location":"artefactIntegrity/#software-of-unknown-provenance","title":"Software of unknown provenance","text":"<p>Documentation of Software of unknown provenance (SOUP) is a requirement primarily known in the Medical Industries. It is a collection of all software components that are not developed inhouse. This comprises Common of the Shelf (COTS) solutions purchased from 3rd parties as well as Open Source components. </p> <p>TrustSource provides - in the medical edition - a capability to assemble these lists and maintain the meta data of these componnets. The process to maintain this data is in YOUR responsibility.   </p>"},{"location":"artefactIntegrity/#binary-links","title":"Binary Links","text":"<p>Trustsource allows to create a link between the meta data provided in the Notice File or SBOM with a specific binary artifact. This can be done trough the UI or by API. It is in YOUR responsibility to arrange the correct matching.</p>"},{"location":"dataIntegrity/","title":"Data Integrity","text":"<p>This section addresses all sort of data that goes into the system. The first section addresses general aspects </p>"},{"location":"dataIntegrity/#inbound-quality","title":"Inbound Quality","text":"<p>TrustSource provides you with a preset of tooling, configured to allow the effortless execution of compliance and security tasks associated with the use of open source. To ensure proper results, the provided materials must satisfy three requirements. The must be complete, correct and free of manipulation. To achieve  these requirements, </p>"},{"location":"dataIntegrity/#completeness","title":"Completeness","text":"<p>To provide a compliant documentation, it is essential to be complete. TrustSource provides different means to support the goal of completeness: </p> <ul> <li>SCA for creation of SBOMs on source code during compilation</li> <li>SCA for analysis of Docker Containers</li> <li>Repository analysis for license discovery</li> <li>Management of Infrastructure components</li> <li>Administration of 3rd party components (COTS)</li> <li>Link of modules into re-used code</li> <li>Link between Meta-Data and binaries</li> </ul> <p>However, it is in the responsibility of the user to thrive for completion. There is currently no way for TrustSource to verify completeness. We might hint on missing components based on identified applied well known solutions. But we can't distinguish whether a component has been left out by accident or intention. Thus it remains in the responsibility of the project owner to testify conpleteness.</p>"},{"location":"dataIntegrity/#correctness","title":"Correctness","text":"<p>Another important aspect is correctness. TrustSource collects and provides meta-data provided by 3rd parties. Our goal is to simplify the collection and clearance of all this meta data. That's why we have added all the tooling and clearance support tasks and tools. However, there remain cases were it is not always clear which license a particular piece of code follows. Some components even allow the choice of the license to use. </p> <p>These situations require license conclusion. Decisions on which license is concluded are in your responsibility. </p> <p>The same applies to declared licenses. TrustSource indicates what type of license is known for a particular component. It also provides the option to verify this declaration with a press of a button - thus deepscan will download the repository, assess the sources for license indications and provide the findings. But it remains your responsibility, to make the decision out of it and accept the information as compliant or not. </p>"},{"location":"dataIntegrity/#integrity","title":"Integrity","text":"<p>TrustSource will take care that all data uploaded and provided to TrustSource remains full integrity. It also takes the responsibility of providing tools creating inbound artifacts. For these tools we take the responsibility that all information found will be correct and formats produced will be fine and accepted by TrustSource. </p> <p>However, it is possible to produce scans, store them locally, manipulate or remove entries from the findings lists and upload these manipulated scans to TrustSource. Given a component with strong copyleft license is removed, TrustSource will not be able to identify this missing component and hence, not be able to alert you, if this would not suit your goals.</p> <p>TrustSource provides upload authentication through API keys (see API key management) and allows integration into automated executions, thus preventing manipulation. However, it is in your responsibility, that the uploaded data will not be manipulated. </p>"},{"location":"dataIntegrity/#uploading-scans","title":"Uploading Scans","text":""},{"location":"dataIntegrity/#our-responsibility","title":"Our Responsibility","text":"<p>It is TrustSource's responsibility to ensure the upload is technically possible, meaning a service endpoint will be available, given  authentication and authorisation can be successfully performed. </p> <p>In addition it is TrustSource's responsibility to ensure that data uploaded, will be processed properly, provided the data is in the correct format and size. If the latter is not given, it is TrustSurce's responsibility to discard the uploaded data and prevent system failure as well as keep the integrity of the data and availability of the system.</p>"},{"location":"dataIntegrity/#your-responsibility","title":"Your Responsibility","text":"<p>We aim to cope with sudden load increases. However, despite a sound capablity to cope with such increases there always will be a number of requests that is high enough to exceed provided capacity. If you can forsee that you will require an extraordinary amount of requests in a short amount of time, it would be in your responsibility to alert our operations team upfront. We would recommend to get a notification if you plan to send more than 10 SBOMs / sec for a period a several minutes. Please reach out to your client representative or open a ticket with our support.</p>"},{"location":"dataIntegrity/#capturing-the-right-dependencies","title":"Capturing the right Dependencies","text":"<p>It is important to understand that scanning a repository is not sufficient to determine the composition of a software. During build time, additional components may be added by the compiler. We differentiate between Direct Dependencies, which are directly described as dependencies and Transitive Dependencies, which are added by these direct depdencies. </p> <p>Our scanners are ecosystem specific and work different to collect what is used to build the service. They collect, what will is used to build the solution. This is, why we are able to show the Transitive Dependencies as well as the path, from where they entered the solution.</p> <p>If you decide to use a 3rd party scanner, make sure you will pic one that also will take care of the transitive views.</p> <p>However, besides the production relevant dependencies, often tooling is added which is required for testing, metering or other purposes. We summarize these dependencies as DEV Dependencies.</p> <p>Please ensure, that your SBOMs used for release will not contain these unnecessary dependencies!</p> <p>They will create a huge amount of work and add complexity that is not required. That is why we skip them in general. If you want to manage these services as well, you may add them. For some ecosystems we have added the capability to switch them explicitely on during scanning, see e.g. TrustSource Node scanner) But we higly recommend to provide specific \"test projects\" for these scans, so they can be managed but will not interfere with your release process.</p> <p>All that said, it must be clear, that it is your responsibility to determine the completeness of what is scanned. </p>"},{"location":"dataIntegrity/#scanning-containers","title":"Scanning Containers","text":"<p>Docker is haven for developers. Allowing to build layers independently and pushing alltogether around changed development and especially operations exceptionally. However, as you may imagine, the comfortable it is, that many risks it bears.</p> <p>Who knows, what has been put into an image? Who trusts images on docker hub? It is reported that studies found hub images to carry some sort of cryptomining, spy- or malware [1]. Better not trust any image you have not built by yourself! </p> <p>Therefor we recommend to provide a sort of a golden basic image, which you re-use across your solutions. You may create an SBOM and a release per layer, using the former layer as a linked module.   </p> <p>[1] see https://howtoremove.guide/docker-hub-cryptomining-malware/ or https://unit42.paloaltonetworks.com/cryptojacking-docker-images-for-mining-monero/</p>"},{"location":"dataIntegrity/#scanning-binaries","title":"Scanning Binaries","text":"<p>The TrustSource platform currently does not support tooling for the scanning of binaries. You may ask EACG to support on that task or just provide an SBOM created by any binary scanner of your choice you want to associate with your projects. TrustSource will be able to import the information found and thus inject it into your solution SBOM. </p> <p>To identify binaries within your code base, we suggest to use the OpenSSF test on binaries. To execute such a test, you may either scan your repository using OpenSSF scorecard locally or use the TrustSource OpenSSF Scorecard Service </p> <p>If you seek support in scanning binaries, feel free to reach out to EACG, our mother company. They have the resources and skills available to assist you with that task.</p>"},{"location":"dataIntegrity/#uploading-sboms","title":"Uploading SBOMs","text":"<p>TrustSource provides the capability to upload SBOMs. These SBOMs will be treated the same way as TrustSource scans. You may select the project and module you want to push the SBOM to. It is possible to select either CycloneDX or SPDX format for the import.</p> <p>PLEASE NOTE: TrustSource will reject every upload &gt;10 MB. If you want to upload larger SBOMs, please contact our Support or see our knowledgebase</p> <p>Completeness and correctness of the SBOM contents as well as providing a valid SBOM format is your repsonisbiity.</p> <p>Assessing the contents of the SBOM and adding the data into the overall compliance flow is the responsibility of TrustSource.</p>"},{"location":"eos/","title":"EOS Responsibilities","text":"<p>In this section we will outline our responsibilities and the measures we implement to cope with them. </p>"},{"location":"eos/#overview-of-our-responsibilities","title":"Overview of our Responsibilities","text":"<p>TrustSource sees it as its responsibility to provide a seamless use experience. We have designed the service for zero downtime. For over three years now, we were able to keep this promise. </p> <p>Together with our operating partner AWS we defined a Shared Security Responsibility Model, that clarifies the responsibilities of each side. Since this allows smooth operations, we decided to provide such a guidance for our application and our users as well.</p> <p>AWS takes care for the security of the cloud, while we take care for the security in the cloud. The same pattern applies for our relationship: While we take care for the security of the application, you will have to take care for the security in the application.  </p>"},{"location":"eos/#measures-to-protect-security-of-the-cloud","title":"Measures to protect security of the cloud","text":"<p>AWS provides a set of certifications for their infrastructure to ensure sound and reliable operations of the hardware as the foundation for their business. Almost all their services, at least all the services that we used to provide the application, are compliant with the following security standards (certified by 3rd party):</p> <ul> <li>SOC 1/SSAE 16/ ISAE 3402 (formerly SAS 70 Type II)</li> <li>SOC 2</li> <li>SOC 3</li> <li>FISMA, DIACAP, FedRAMP</li> <li>PCI DSS Level 1</li> <li>ISO 27001 Level 1</li> <li>ITAR</li> <li>FIPS 140-2</li> </ul> <p>The comprehensive security concepts of the datacenter operators guarantee, that data will be protected from theft or damage due to environmental events. All data centers are protected by security staff 24/7 365 days a year. All sensitive internal areas are surveilled by cameras. 2 factor perimeter access control ensures that only authorized people will be able to access. All datacenters provide connectivity to at least two internet providers to ensure relibale availability.</p> <p>Our partner guarantees the following measures:</p>"},{"location":"eos/#power","title":"Power:","text":"<p>All datacenters provide several availability zones, meaning that each zone can be operated without restrictions even if another zone fails. UPS and voltage filters as well as redundant Diesel generators ensure continuous power supply.</p>"},{"location":"eos/#air-conditioning-and-temerature","title":"Air Conditioning and Temerature:","text":"<p>All datacenters organize air conditioning in a way that conditions remain optimal for the operations of servers. Specific staff surveills and organizes the correct conditions concerning temperature and humidity. </p>"},{"location":"eos/#administration","title":"Administration:","text":"<p>AWS monitors and continuously maintains all critical systems to keep server operations up and running. Maintenance is done on a prveentive level to reduce failure and outage times.   </p>"},{"location":"eos/#decomissioning-of-storage","title":"Decomissioning of Storage:","text":"<p>whenever a storage device will be decommisioned, AWS will execute a decomissioning procedure following the Department of Defense operating manual (5220.22-M) or NIST 800.88 described procedure. Thus it is ensured, that no data remmance may lead to data loss.  </p>"},{"location":"eos/#measures-we-established-to-protect-security-in-the-cloud","title":"Measures we established to protect security in the cloud","text":"<p>From our side, we take the responsibility to ensure smooth operations of our our solution. This comprises not only a secure application design following all known architecture best practises but also a high degree of automation in deployment and operations.</p>"},{"location":"eos/#architectural-design","title":"Architectural Design","text":"<p>We make use of the availability zone concept by distributing our services across three availability zones. This does not mean, that services alwas are operated in every three zones, but the deployment, the rights and the data are spread across the three zones, so that failure of up to two zones will not negatively impact the operations of our services. </p> <p>The network design follows common best practises for cloud based applications. Thus we operate a multilayered, segmented network with only a handful of endpoints being available in the public zone. Access to private zones is limited to specific roles and only possible through specific access gates. At these gates we monitor the traffic closely and search for anomalies. Communication between clients and the application uses TLS v1.3 encryption to seurce data in motion between the client and the server.</p> <p>The aplication itself is operated as a service across serval kubernetes clusters. The clusters allow internal failover. Thus if a cluster member fails, the services operated on the corresponding POD will automatically be restarted on another, stil functional or new cluster member. Since the application it self is stateless, the maximal loss will be the failing transaction at the momement of failure, if it cannot be re-run.</p> <p>The service also measures availability and increases the amount of instances to cope with higher transactional demands. The scaling is organised in several steps, preventing over-scaling and also maintains metrics to automatically down-scale if demand reduces again. Access to the applications is possible only from specified network segments and sources.</p> <p>Each service operated in the context of TrustSource has its own identity and access policy. To invoke any service a specfic role or group membership is required. These roles or memberships differ by service and are provided on a needs basis. </p>"},{"location":"eos/#web-application-firewall","title":"Web Application Firewall","text":"<p>We operate a web application. This means the application is accessible over the public internet. To prevent unwanted visitors from accessing the application, we operate a Wab application firewall (WAF). The WAF reduces the number of ports that can be called from outside as well as some protection from DoS attacks. In addition the WAF filters and (technically) inspects traffic. </p>"},{"location":"eos/#observability","title":"Observability","text":"<p>The complete infrastructure is instrumented and operated in a way, that metrics are collected in a highly available fail-over secured data location. The dashboard and alarms use high available infrastructure provided by our hosting partner to monitor and assess logs as well as service availability. The same infrastructure is used to analyze teh network traffic inside and towards the services. Unexpected routes or unusual transfers are identified and will alert our operations team for further investigations.</p>"},{"location":"eos/#key-management","title":"Key Management","text":"<p>We make use of Key Management Systems (KMS). Thus all  keys used within the application will be stored in a key store with access logs and access protection policies. Thus it is possible to trace key access and get alerted on unauthenticated key access.</p> <p>We make extensive use of keys. For example will scan results, uploaded and stored for later analysis, be encrypted using company specific keys. Thus even if for some reason the protected storage would become accessible by a third party, data will remain encrypted with the key hidden in the KMS.</p>"},{"location":"eos/#separated-environments","title":"Separated Environments","text":"<p>One of the most important security measures is the separation of our different system environments. There is one for te develeopment and testing and another one specific for production. This separation allows to make use of different keys, limit access further and completely seggregate poduction data from testing environments. Developers do not have access to our production environment. </p>"},{"location":"eos/#secure-development","title":"Secure Development","text":"<p>All our developments make use of modern CI/CD practises. Based on <code>pre-commit</code> we have a set of language specific and some language agnostic tests that we apply on each commit. This comprises the following types of tests: * formal linting for specific file types (YAML, JSON, MD, etc.) * language specific linting to cope with coding quality * language specfic SAST testing * language specfifc fuzzing (coverage guided) * default checks (hardcoded credentials etc.) In addition our developers best practises require the developers to maintain a CHANGELOG for each repository. New components will be added using our TrustSource for Security and Compliance Management. Thus we could claim to be ISO-5230 (OpenChain) compliant. (The completion of the questionnaire remains a open tasks!)  It is part of the Definition of Done, to provide a scripted deployment accompanied with tests to verify proper functionality. The duplication of environments allows a sound preparation and testing by the developer. Once a feature is finalized, a pull request needs to be executed, triggering a peer review. The merged code will be signed and the signature becomes part of the change long. So that it can be verified during deployment that only the right sources will be deployed.</p>"},{"location":"eos/#secured-deployment","title":"Secured Deployment","text":"<p>While deployments to the development environments can be done by the developers themselves, chages to the production environment can only be performed by the operations team. Installing a four eyes principle may not be the best practise of modern deployment, but TrustSource is not only a SaaS, it also has a compliance responsibility. This comprises providing an immutable trace of events that lead to changes on configurations and / or data on client side. technical manipulation of this data must be prevented. </p> <p>TrustSource is built based on MongoDB, a document database. The services have been designed to tolerate unknown data elements without failing (e.g. using projections). Thus even structural updates can be provided incremental. While one service already populates data to the database, another service still cannot handle the data but still will be able to operate the documents. A proper semantic co-ordination is part of the release-management process.  </p> <p>Depending on the character of the change, it will be possible to start deploying in a canary mode. However, since all deployments are scripted and executed towards the environment using a transaction manager, rollback will always be a valid option. </p>"},{"location":"eos/#bcm","title":"BCM","text":"<p>For the unlikely event of complete region outage, we backup data into a second region (currently Ireland) and have a defined procedure on how to rebuild infrastructure within two hours from failure. This procedure is tested on an annual base (ramping up the complete infratsructure in a new datacenter). The results are logged and reviewed for further improvements and adjustments. </p>"},{"location":"eos/#our-partners","title":"Our Partners","text":"<p>To provide TrustSource at an affordable subscritpion price, we operate it on AWS. Thus we rely partly on the professionalism of our 3rd party certified partner. A detailed description of what AWS brings to the table when it comes to the provisioning of datacenter services and how this is organised can be found in this document.</p> <p>In addition we work with MongoDB, providing us with Cluster and Database management software. The clusters are operated by us on top of our AWS infrastructure without Mongo having access to neither our code nor access to the data. This data, under no circumstances, contains any customer data or PII. Mongo Atlas will receive only technical usage statistics on database metrics, such as durations of transactions, number of bytes read, etc..</p> <p>We have closed the standard data processing agreement following the European standards with AWS. If you are planning to become our customer and we conclude serious negotiations, you will have signed an NDA with your account representative. Under these prerequisites, you will be able to get a copy of this contract. </p>"}]}